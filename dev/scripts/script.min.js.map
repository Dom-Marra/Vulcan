{"version":3,"sources":["script.js"],"names":[],"mappingsfile":"script.min.js","sourcesContent":["//------------------------------------------------//\r\n//                  Image Slider                  //\r\n//------------------------------------------------//\r\n\r\nlet switchImageTimeout;         //Current timeout to next image\r\nlet currentSlideIndex;          //Current image index\r\nlet currentSliderAnimation;     //The current slider animation running\r\n\r\nlet sliderPaginations = $('.slider-pagination').children();\r\n\r\n/**\r\n * Click events for the slide pagination\r\n */\r\nsliderPaginations.each(function(index) {\r\n    $(this).click(() => {\r\n        setNewActiveImage(index);\r\n    });\r\n});\r\n\r\n/**\r\n * Changes the image to display in the slider\r\n * \r\n * @param {number} index \r\n *       The index of the image element in the parent container\r\n */\r\nlet setNewActiveImage = (index) => {\r\n\r\n    //The image element to make active\r\n    let nextActive = $('.slide-show-wrapper').find('img').eq(index);\r\n\r\n    //The current active image element\r\n    let currentActive = $('.slide-show-wrapper').find('img').eq(currentSlideIndex);\r\n    \r\n    //Duration for image fade\r\n    let animationTime = 0;\r\n\r\n    //Do not switch if the current index is the same as the current image\r\n    if (index != currentSlideIndex) {\r\n        if (currentSliderAnimation) currentSliderAnimation.finish();       //Make the current animation finish\r\n        currentSlideIndex = index;              //Set the current image index to the one passed\r\n\r\n        let nextActiveZ = 1;                    //The z-index to set the active image initially\r\n\r\n        //If there is a current active image set an animation time\r\n        //If not set the z-index to use to be 2\r\n        if (currentActive.length) animationTime = 600;  \r\n        else nextActiveZ = 2;\r\n        \r\n        //Remove the active class from the pagination spans\r\n        //Add the class to the correct span\r\n        sliderPaginations.removeClass('active');\r\n        $(sliderPaginations[index]).addClass('active');\r\n\r\n        //Set the z-index of the image to be active and its opactiy\r\n        nextActive.css({'z-index': nextActiveZ, opacity: 1});\r\n\r\n        //Animate the current active image opacity to fade to 0\r\n        //After the animation is complete set its z-index to -1\r\n        //and set the one that will be active to 2\r\n        currentSliderAnimation = currentActive.animate({\r\n            opacity: 0\r\n        }, animationTime, () => {\r\n                currentActive.css({'z-index': -1});\r\n                nextActive.css({'z-index': 2});\r\n        });\r\n    }\r\n\r\n    //Clear the timeout for the image switch\r\n    window.clearTimeout(switchImageTimeout)\r\n\r\n    //Set a new timeout for the next image switch (5 seconds)\r\n    switchImageTimeout = setTimeout(() => {\r\n        setNewActiveImage(index + 1 > 2 ? 0 : index + 1);\r\n    }, 5000 + animationTime)\r\n}\r\n\r\n//Init the active image to the first image\r\nsetNewActiveImage(0);\r\n\r\n\r\n//------------------------------------------------//\r\n//                   Header                       //\r\n//------------------------------------------------//\r\n\r\nconst TOP_NAV = $('#top-nav');\r\nconst TOP_NAV_TOGGLE = $('#menu-toggle');\r\nconst MEDIA_QUERY = window.matchMedia('(min-width: 48em)');\r\nconst HEADER = $('#header');\r\n\r\nlet toggleNav = (close = false) => {\r\n    if (TOP_NAV.hasClass('opened') || close) {\r\n        TOP_NAV.removeClass('opened');\r\n\r\n        TOP_NAV_TOGGLE.removeClass('toggled');\r\n    } else {\r\n        TOP_NAV.addClass('opened');\r\n\r\n        TOP_NAV_TOGGLE.addClass('toggled');\r\n    }\r\n}\r\n\r\nTOP_NAV_TOGGLE.click(() => {\r\n    toggleNav();\r\n});\r\n\r\n\r\nif (!MEDIA_QUERY.matches) {\r\n    TOP_NAV.addClass('animate');\r\n}\r\n\r\nMEDIA_QUERY.addEventListener('change', (e) => {\r\n    if (e.matches) {\r\n        TOP_NAV.removeClass('animate');\r\n        TOP_NAV.removeClass('opened');\r\n        TOP_NAV_TOGGLE.removeClass('toggled');\r\n\r\n    } else TOP_NAV.addClass('animate');\r\n});\r\n\r\nwindow.addEventListener('popstate', () => {\r\n    if (TOP_NAV.hasClass('opened')) toggleNav(true);\r\n})"]}